global
  log 127.0.0.1   local0
  log 127.0.0.1   local1 notice
  #log loghost    local0 info
  maxconn 80000
  #debug
  #quiet
  user haproxy
  group haproxy
  stats socket /tmp/haproxy.sock

defaults
  log             global
  mode            http
  option          httplog
  option          dontlognull
  retries         3
  option          redispatch
  maxconn        80000
  timeout client 60s             # Client and server timeout must match the longest
  timeout server 60s             # time we may wait for a response from the server.
  timeout queue  120s              # Don't queue requests too long if saturated.
  timeout connect 10s           # There's no reason to change this one.
  timeout http-request 30s  # A complete request may never take that long.
  option          httpclose                                         # disable keepalive (HAProxy does not yet support the HTTP keep-alive mode)
  option          abortonclose                                      # enable early dropping of aborted requests from pending queue
  option          httpchk                                           # enable HTTP protocol to check on servers health
  stats auth opsworks:csy86nipb9
  stats uri /__haproxy?stats

# Set up application listeners here.



backend php_cyg_app_servers
  balance roundrobin
  option redispatch
  option forwardfor
  option httpchk OPTIONS /ping.html
  server cyg_fides domU-12-31-39-0E-E0-38.compute-1.internal:80 weight 10 maxconn 100 check inter 10s

backend php_site_app_servers
  balance roundrobin
  option redispatch
  option forwardfor
  option httpchk OPTIONS /ping.html
  server site_liberalitas domU-12-31-39-0E-D9-A3.compute-1.internal:80 weight 10 maxconn 100 check inter 10s

backend php_app_servers_ssl
  mode tcp
  balance roundrobin
  option redispatch
  option ssl-hello-chk
  server fides domU-12-31-39-0E-E0-38.compute-1.internal:443 weight 10 maxconn 100 check inter 10s
  server liberalitas domU-12-31-39-0E-D9-A3.compute-1.internal:443 weight 10 maxconn 100 check inter 10s





frontend http-in
  bind :80

  # all domains of Rails applications

  # all domains of PHP applications
  acl php_site_app path_beg /_ /product
  acl php_site_app hdr_sub(Referer) /product/
  acl php_site_app hdr_sub(Referer) /_/

  # all domains of node.js applications

  # all domains of static applications

  # choose backend

  use_backend php_site_app_servers if php_site_app

  default_backend php_cyg_app_servers

frontend https-in
  mode tcp
  bind :443

  # all domains of Rails applications

  # all domains of PHP applications
  acl php_applications_ssl hdr_end(host) -i cyh

  # all domains of node.js applications

  # all domains of static applications

  use_backend php_app_servers_ssl if php_applications_ssl

  default_backend php_app_servers_ssl